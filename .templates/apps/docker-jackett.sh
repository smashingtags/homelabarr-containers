#!/bin/bash
####################################
# All rights reserved.              #
# started from Zero                 #
# Docker owned dockserver           #
# Docker Maintainer dockserver      #
#####################################
#####################################
# THIS DOCKER IS UNDER LICENSE      #
# NO CUSTOMIZING IS ALLOWED         #
# NO REBRANDING IS ALLOWED          #
# NO CODE MIRRORING IS ALLOWED      #
#####################################
# shellcheck disable=SC2086
# shellcheck disable=SC2046

FOLDER=$1
APP=$2
USERNAME=$3
TOKEN=$4

### APP SETTINGS ###

APPBRANCH="master"
APPLINK="https://api.github.com/repos/Jackett/Jackett"
NEWVERSION=$(curl -u $USERNAME:$TOKEN -sX GET "https://api.github.com/repos/Jackett/Jackett/releases/latest" | jq -r .tag_name)
NEWVERSION="${NEWVERSION#*v}"
NEWVERSION="${NEWVERSION#*release-}"
NEWVERSION="${NEWVERSION}"

HEADLINE="$(cat ./.templates/headline.txt)"

DESCRIPTION="$(curl -u $USERNAME:$TOKEN -sX GET "$APPLINK" | jq -r '.description')"
BASEIMAGE="ghcr.io/linuxserver/baseimage-ubuntu:bionic"

INSTCOMMAND="apt-get install -yqq"
UPTCOMMAND="apt-get update -yqq"
PACKAGES="uuid-runtime udev jq wget curl tar unzip unrar gpg-agent software-properties-common libicu60"

CLEANUP="apt-get remove -yqq software-properties-common gpg-agent && \\
     apt-get autoremove -yqq && apt-get clean -yqq && \\
     rm -rf /tmp/* /var/lib/apt/lists/* /var/tmp/* /var/log/*"

PICTURE="./images/$APP.png"
APPFOLDER="./$FOLDER/$APP"
PORT="EXPOSE 9117"
VOLUMEN="VOLUME /config"

### RELEASE SETTINGS ###

echo '{
   "appname": "'${APP}'",
   "apppic": "'${PICTURE}'",
   "appfolder": "./'$FOLDER'/'$APP'",
   "newversion": "'${NEWVERSION}'",
   "appbranch": "'${APPBRANCH}'",
   "baseimage": "'${BASEIMAGE}'",
   "description": "'${DESCRIPTION}'",
   "body": "Upgrading '${APP}' to '${NEWVERSION}'",
   "user": "github-actions[bot]"
}' > "./$FOLDER/$APP/release.json"

### DOCKER BUILD ###
### GENERATE Dockerfile based on release.json

echo '## This file is automatically generated (based on release.json)
##
## Do not changes any lines here
##
'"${HEADLINE}"'
FROM '"${BASEIMAGE}"'
LABEL org.opencontainers.image.source="'"https://github.com/dockserver/container"'"

ARG TARGETPLATFORM
ARG BUILDPLATFORM
ARG VERSION="'"${NEWVERSION}"'"
ARG BRANCH="'"${APPBRANCH}"'"

ARG DEBIAN_FRONTEND="noninteractive"
ENV XDG_DATA_HOME="'"/config"'" \
XDG_CONFIG_HOME="'"/config"'"

RUN \
   echo "'"**** update runtime packages ****"'" && \
     '"${UPTCOMMAND}"' && \
   echo "'"**** install packages ****"'" && \
     '"${INSTCOMMAND}"' '"${PACKAGES}"' && \
   echo "'"**** install jackett ****"'" && \
     mkdir -p /app/Jackett && \
     curl -fsSL "'"https://github.com/Jackett/Jackett/releases/download/v"'${VERSION}'"/Jackett.Binaries.LinuxAMDx64.tar.gz"'" | tar xzf - -C /app/Jackett --strip-components=1 && \
   echo "'"**** fix for host id mapping error ****"'" && \
     chown -R root:root /app/Jackett && \
   echo "'"v${NEWVERSION}"'" > /etc/docker-image && \
   echo "'"**** cleanup ****"'" && \
     '"${CLEANUP}"'

COPY --chown=abc '"${APPFOLDER}"'/root/ /

'"${PORT}"'

'"${VOLUMEN}"'
##EOF' > ./$FOLDER/$APP/Dockerfile
