#!/bin/bash
####################################
# All rights reserved.              #
# started from Zero                 #
# Docker owned dockserver           #
# Docker Maintainer dockserver      #
#####################################
#####################################
# THIS DOCKER IS UNDER LICENSE      #
# NO CUSTOMIZING IS ALLOWED         #
# NO REBRANDING IS ALLOWED          #
# NO CODE MIRRORING IS ALLOWED      #
#####################################
# shellcheck disable=SC2086
# shellcheck disable=SC2046

FOLDER=$1
APP=$2
USERNAME=$3
TOKEN=$4

### APP SETTINGS ###
APPLINK="https://api.github.com/repos/dockserver/dockserver"
BUILDVERSION=$(curl -sX GET "https://registry.hub.docker.com/v2/repositories/library/php/tags?page=1&name=8-apache" \
   | jq -r 'select(.results != null) | .results[]["name"]' \
   | grep -x "8-apache" | tail -n1)
BUILDVERSION="${BUILDVERSION#*v}"
BUILDVERSION="${BUILDVERSION#*release-}"
BUILDVERSION="${BUILDVERSION}"

BUILDIMAGE="php"
HEADLINE="$(cat ./.templates/headline.txt)"

PICTURE="./images/$APP.png"
APPFOLDER="./$FOLDER/$APP"

## RELEASE SETTINGS ###

echo '{
   "appname": "'${APP}'",
   "apppic": "'${PICTURE}'",
   "appfolder": "./'$FOLDER'/'$APP'",
   "newversion": "'${BUILDVERSION}'",
   "baseimage": "'${BUILDIMAGE}'",
   "description": "Docker image  for '${APP}'",
   "body": "Upgrading '${APP}' to baseimage: '${BUILDIMAGE}':'${BUILDVERSION}'",
   "user": "dockserver image update[bot]"
}' > "./$FOLDER/$APP/release.json"


### DOCKER BUILD ###
### GENERATE Dockerfile based on release.json

echo '## This file is automatically generated (based on release.json)
##
## Do not changes any lines here
##
'"${HEADLINE}"'
FROM '"${BUILDIMAGE}"':'"${BUILDVERSION}"'

LABEL org.opencontainers.image.source="'"https://github.com/dockserver/container"'"

ARG TARGETPLATFORM
ARG BUILDPLATFORM

RUN \
  echo "'"**** install build packages ****"'" && \
  rm -rf /etc/apt/sources.list && \
  echo "'"deb http://ftp.debian.org/debian experimental main"'" >>/etc/apt/sources.list && \
  echo "'"deb http://ftp.debian.org/debian sid main"'" >>/etc/apt/sources.list && \
  apt-get update -yqq && \
  apt-get install -yqq git unzip apt-utils && \
  apt-get purge libgcc-8-dev -yqq && \
  apt-get autoremove -yqq && \
  apt-get autoclean -yqq && \
  apt-get -t experimental install libc6-dev -yqq && \
  apt-get autoremove -yqq && \
  apt-get autoclean -yqq

RUN curl -sS https://getcomposer.org/installer | php && mv composer.phar /usr/local/bin/composer

COPY '"${APPFOLDER}"'/app/ /var/www/html/

RUN composer install --quiet && mkdir -p /var/lib/vnstat

##EOF' > ./$FOLDER/$APP/Dockerfile
