#!/bin/bash
####################################
# All rights reserved.              #
# started from Zero                 #
# Docker owned dockserver           #
# Docker Maintainer dockserver      #
#####################################
#####################################
# THIS DOCKER IS UNDER LICENSE      #
# NO CUSTOMIZING IS ALLOWED         #
# NO REBRANDING IS ALLOWED          #
# NO CODE MIRRORING IS ALLOWED      #
#####################################
# shellcheck disable=SC2086
# shellcheck disable=SC2046

FOLDER=$1
APP=$2
USERNAME=$3
TOKEN=$4

### APP SETTINGS ###

APPBRANCH="master"
APPLINK="https://api.github.com/repos/dockserver/dockserver"
NEWVERSION=$(curl -sX GET "https://registry.hub.docker.com/v2/repositories/library/alpine/tags" \
   | jq -r 'select(.results != null) | .results[]["name"]' \
   | sort -t "." -k1,1n -k2,2n -k3,3n | grep "\." | tail -n1)
NEWVERSION="${NEWVERSION#*v}"
NEWVERSION="${NEWVERSION#*release-}"
NEWVERSION="${NEWVERSION}"

## BRAND VERSION
APPVERSION=$(curl -u $USERNAME:$TOKEN -sX GET "https://api.github.com/repos/dockserver/dockserver/releases/latest" | awk '/tag_name/{print $4;exit}' FS='[""]' | sed -e 's_^v__')
APPVERSION="${APPVERSION#*v}"
APPVERSION="${APPVERSION#*release-}"
APPVERSION="${APPVERSION}"

## FINALIMAGE
FIMAGE="ghcr.io/squidfunk/mkdocs-material"
FINALVERSION=$(curl -u $USERNAME:$TOKEN -sX GET "https://api.github.com/repos/squidfunk/mkdocs-material/releases/latest" | awk '/tag_name/{print $4;exit}' FS='[""]' | sed -e 's_^v__')
FINALVERSION="${FINALVERSION#*v}"
FINALVERSION="${FINALVERSION#*release-}"
FINALVERSION="${FINALVERSION}"

DESCRIPTION="$(curl -u $USERNAME:$TOKEN -sX GET "$APPLINK" | jq -r '.description')"
HEADLINE="$(cat ./.templates/headline.txt)"
BASEIMAGE="alpine"
PICTURE="./images/$APP.png"
APPFOLDER="./$FOLDER/$APP"

UPCOMMAND="apk --quiet --no-cache --no-progress update && \\
    apk --quiet --no-cache --no-progress upgrade"
INSTCOMMAND="apk add -U --update --no-cache"
PACKAGES="bash git"
PULLWIKI="mkdir -p /app && git clone --quiet https://github.com/dockserver/dockserver.git /app"
CLEANUP="apk del --quiet --clean-protected --no-progress && \\
    rm -f /var/cache/apk/*"

## BUILDTAGE

CBUILDERSTAGE="--from=buildstage /app/wiki /docs"

PORT="EXPOSE 8000"
WKDIR="WORKDIR /docs"
RUNWIKI="python3 -m pip install --upgrade pip && \\
  python3 -m pip install --no-warn-script-location --upgrade --force-reinstall -r /docs/requirements.txt && \\
  rm -rf /tmp/* && rm -rf /var/cache/apk/* && rm -rf /root/.cache"

### RELEASE SETTINGS ###

echo '{
   "appname": "'${APP}'",
   "apppic": "'${PICTURE}'",
   "appfolder": "./'$FOLDER'/'$APP'",
   "appbranch": "'${APPBRANCH}'",
   "newversion": "'${NEWVERSION}'",
   "appversion": "'${APPVERSION}'",
   "wikiversion": "'${FINALVERSION}'",
   "baseimage": "'${BASEIMAGE}'",
   "description": "'${DESCRIPTION}'",
   "body": "Upgrading '${APP}' to '${NEWVERSION}'",
   "user": "github-actions[bot]"
}' > "./$FOLDER/$APP/release.json"


### DOCKER BUILD ###
### GENERATE Dockerfile based on release.json

echo '## This file is automatically generated (based on release.json)
##
## Do not changes any lines here
##
'"${HEADLINE}"'
FROM '"${BASEIMAGE}"':'"${NEWVERSION}"' as buildstage
LABEL org.opencontainers.image.source="'"https://github.com/dockserver/container"'"

ARG TARGETPLATFORM
ARG BUILDPLATFORM

ARG BASEVERSION="'"${NEWVERSION}"'"
ARG APPVERSION="'"${APPVERSION}"'"
ARG WIKIVERSION="'"${FINALVERSION}"'"
ARG BRANCH="'"${APPBRANCH}"'"

## BUILDSTAGE

RUN \
  echo "'"**** update packages ****"'" && \
    '"${UPCOMMAND}"' && \
  echo "'"**** install build packages ****"'" && \
    '"${INSTCOMMAND}"' '"${PACKAGES}"' && \
  echo "'"**** install wiki ****"'" && \
    '"${PULLWIKI}"' && \
  echo "'"*** cleanup system ****"'" && \
    '"${CLEANUP}"'

## FINALSTAGE

FROM '"${FIMAGE}"':'"${FINALVERSION}"'

COPY '"${CBUILDERSTAGE}"'

RUN \
  echo "'"**** run wiki packages ****"'" && \
  '"${RUNWIKI}"'

'"${WKDIR}"'

'"${PORT}"'
ENTRYPOINT ["'"mkdocs"'"]
CMD [ "'"serve"'" , "'"--dev-addr=0.0.0.0:8000"'" ]
##EOF' > ./$FOLDER/$APP/Dockerfile
