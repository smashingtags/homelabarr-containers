#!/bin/bash
####################################
# All rights reserved.              #
# started from Zero                 #
# Docker owned dockserver           #
# Docker Maintainer dockserver      #
#####################################
#####################################
# THIS DOCKER IS UNDER LICENSE      #
# NO CUSTOMIZING IS ALLOWED         #
# NO REBRANDING IS ALLOWED          #
# NO CODE MIRRORING IS ALLOWED      #
#####################################
# shellcheck disable=SC2086
# shellcheck disable=SC2046

FOLDER=$1
APP=$2
USERNAME=$3
TOKEN=$4

### APP SETTINGS ###

APPBRANCH="master"
APPLINK="https://api.github.com/repos/deluge-torrent/deluge"
NEWVERSION=$(curl -sX GET http://ppa.launchpad.net/deluge-team/stable/ubuntu/dists/focal/main/binary-amd64/Packages.gz \
   | gunzip -c | grep -A 7 -m 1 '^Package: deluged$' | awk -F ': ' '/Version/{print $2;exit}' | sed -r 's/.{27}$//')
NEWVERSION="${NEWVERSION#*v}"
NEWVERSION="${NEWVERSION#*release-}"
NEWVERSION="${NEWVERSION}"
HEADLINE="$(cat ./.templates/headline.txt)"
DESCRIPTION="$(curl -u $USERNAME:$TOKEN -sX GET "$APPLINK" | jq -r '.description')"

BASEIMAGE="ghcr.io/dockserver/docker-ubuntu-focal:latest"

INSTCOMMAND="apt-get install -yqq"
UPTCOMMAND="apt-get update -yqq"

APPSPEC="gnupg"
UPTKEY="apt-key adv --keyserver keyserver.ubuntu.com --recv-keys C5E6A5ED249AD24C"
PACKAGES="deluged deluge-console deluge-web python3-future python3-requests p7zip-full unrar unzip"
CLEANUP="rm -rf /tmp/* /var/lib/apt/lists/* /var/tmp/*"
PICTURE="./images/$APP.png"
APPFOLDER="./$FOLDER/$APP"
PORT="EXPOSE 8112 58846 58946 58946/udp"
VOLUMEN="VOLUME /config"

### RELEASE SETTINGS ###

echo '{
   "appname": "'${APP}'",
   "apppic": "'${PICTURE}'",
   "appfolder": "./'$FOLDER'/'$APP'",
   "newversion": "'${NEWVERSION}'",
   "appbranch": "'${APPBRANCH}'",
   "baseimage": "'${BASEIMAGE}'",
   "description": "'${DESCRIPTION}'",
   "body": "Upgrading '${APP}' to '${NEWVERSION}'",
   "user": "github-actions[bot]"
}' > "./$FOLDER/$APP/release.json"

### DOCKER BUILD ###
### GENERATE Dockerfile based on release.json

echo '## This file is automatically generated (based on release.json)
##
## Do not changes any lines here
##
'"${HEADLINE}"'
FROM '"${BASEIMAGE}"'

LABEL org.opencontainers.image.source="'"https://github.com/dockserver/container"'"

ARG TARGETPLATFORM
ARG BUILDPLATFORM

ARG VERSION="'"${NEWVERSION}"'"
ARG BRANCH="'"${APPBRANCH}"'"
ARG DEBIAN_FRONTEND="'"noninteractive"'"

ENV PYTHON_EGG_CACHE="'"/config/plugins/.python-eggs"'"

RUN  \
  echo "'"**** add repositories ****"'" && \
    '"${UPTCOMMAND}"' && \
    '"${INSTCOMMAND}"' '"${APPSPEC}"' && \
    '"${UPTKEY}"' && \
  echo "'"deb http://ppa.launchpad.net/deluge-team/stable/ubuntu focal main"'" >> /etc/apt/sources.list.d/deluge.list && \
  echo "'"deb-src http://ppa.launchpad.net/deluge-team/stable/ubuntu focal main"'" >> /etc/apt/sources.list.d/deluge.list && \
  echo "'"**** install packages ****"'" && \
    '"${INSTCOMMAND}"' '"${PACKAGES}"' && \
  echo "'"**** cleanup ****"'" && \
    '"${CLEANUP}"'

COPY --chown=abc '"${APPFOLDER}"'/root/ /

'"${PORT}"'

'"${VOLUMEN}"'
##EOF' > ./$FOLDER/$APP/Dockerfile
